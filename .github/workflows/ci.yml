name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  backend-check:
    runs-on: ubuntu-latest
    name: Backend Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Check backend syntax
        working-directory: ./backend
        run: node -c server.js

  frontend-check:
    runs-on: ubuntu-latest
    name: Frontend Check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

  integration-test:
    runs-on: ubuntu-latest
    name: Integration Test
    needs: [backend-check, frontend-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Copy frontend build to backend
        run: cp -r frontend/build backend/public

      - name: Start backend server
        working-directory: ./backend
        run: |
          npm start &
          sleep 10

      - name: Test API endpoints
        run: |
          # Test health endpoint
          curl -f http://localhost:4000/health || exit 1

          # Test products endpoint
          curl -f http://localhost:4000/products || exit 1

          # Test login endpoint
          curl -f -X POST http://localhost:4000/login \
            -H "Content-Type: application/json" \
            -d '{"email":"user@example.com","password":"password123"}' || exit 1

  docker-build:
    runs-on: ubuntu-latest
    name: Docker Build Test
    needs: [backend-check, frontend-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ecommerce-app:test

      - name: Test Docker image
        run: |
          docker run -d -p 4000:4000 --name test-container ecommerce-app:test
          sleep 10
          curl -f http://localhost:4000/health || exit 1
          docker stop test-container
          docker rm test-container
